name: Deploy Manually

on: workflow_dispatch

jobs:
  version:
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: version
        run: |
          current=$(git show HEAD:package.json | grep '"version"' | awk -F '"' '{print $4}')
          echo "tag=v$current" >> $GITHUB_OUTPUT

  build:
    needs: version
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ needs.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true 
          npm ci
          npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  push:
    needs: build
    runs-on: ubuntu-22.04
    env:
      tag: ${{ needs.build.outputs.tag }}
    outputs:
      tag: ${{ needs.build.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: ecr
        uses: aws-actions/amazon-ecr-login@v2
      - id: push
        env:
          registry: ${{ steps.ecr.outputs.registry }}
          repository: ${{ secrets.AWS_ECR_REPOSITORY }}
        run: |
          echo "${{ secrets.ENVS }}" >> .env
          image=$registry/$repository:$tag
          docker build -t $image .
          docker push $image

  deploy:
    needs: push
    runs-on: ubuntu-22.04
    env:
      sha: ${{ github.sha }}
      bucket: ${{secrets.AWS_S3_BUCKET }}
      repository: ${{ secrets.AWS_ECR_REPOSITORY }}
      tag: ${{ needs.push.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: ecr
        uses: aws-actions/amazon-ecr-login@v2
      - env:
          registry: ${{ steps.ecr.outputs.registry }}
        run: |
          echo "tag=$tag" >> manifest
          echo "registry=$registry" >> manifest
          echo "repository=$repository" >> manifest
          cp manifest appspec/manifest
      - run: |
          aws deploy push \
            --application-name g2b-server \
            --s3-location s3://$bucket/g2b-server-$tag-$sha.zip \
            --source appspec
      - run: |
          aws deploy create-deployment \
            --application-name g2b-server \
            --deployment-group-name product \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=$bucket,bundleType=zip,key=g2b-server-$tag-$sha.zip
