name: Deploy

on:
  push:
    tags: ['v*']

env:
  tag: ${{ github.ref_name }}
  sha: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Create environments
        env:
          envs: ${{ secrets.ENVS }}
        run: |
          echo "$envs" >> .env
          echo "VERSION = $tag" >> .env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker
        id: docker-build
        env:
          registry: ${{ steps.ecr-login.outputs.registry }}
          repository: ${{ secrets.AWS_ECR_REPOSITORY }}
        run: |
          docker build -t $repository:$tag .
          docker push $registry/$repository:$tag

  deploy:
    needs: build

    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create .profile
        env:
          registry: ${{ steps.ecr-login.outputs.registry }}
          repository: ${{ secrets.AWS_ECR_REPOSITORY }}
        run: |
          echo "image=$repository:$tag" >> .profile
          echo "registry=$registry" >> .profile

      - name: Upload to S3
        env:
          bucket: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          cp .profile appspec/.profile
          aws deploy push \
            --application-name g2b-server \
            --s3-location s3://$bucket/g2b-server-$tag-$sha.zip \
            --source appspec

      - name: Deploy
        env:
          bucket: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          source .profile
          aws deploy create-deployment \
            --application-name g2b-server \
            --deployment-group-name product \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=$bucket,bundleType=zip,key=g2b-server-$tag-$sha.zip
